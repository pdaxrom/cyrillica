typedef struct _kbdecode {
    int		keycode;
    ushort	unicode;
    ushort	bunicode;
} kbdecode;

kbdecode hkeymap [][27] = { 
//russia
    {
	{ 'Q', 0x42f, 0x44f },
	{ 'W', 0x428, 0x448 },
	{ 'E', 0x415, 0x435 },
	{ 'R', 0x420, 0x440 },
	{ 'T', 0x422, 0x442 },
	{ 'Y', 0x42b, 0x44b },
	{ 'U', 0x423, 0x443 },
	{ 'I', 0x418, 0x438 },
	{ 'O', 0x41e, 0x43e },
	{ 'P', 0x41f, 0x43f },
	{ 'A', 0x410, 0x430 },
	{ 'S', 0x421, 0x441 },
	{ 'D', 0x414, 0x434 },
	{ 'F', 0x424, 0x444 },
	{ 'G', 0x413, 0x433 },
	{ 'H', 0x425, 0x445 },
	{ 'J', 0x419, 0x439 },
	{ 'K', 0x41a, 0x43a },
	{ 'L', 0x41b, 0x43b },
	{ 'Z', 0x417, 0x437 },
	{ 'X', 0x427, 0x447 },
	{ 'C', 0x426, 0x446 },
	{ 'V', 0x412, 0x432 },
	{ 'B', 0x411, 0x431 },
	{ 'N', 0x41d, 0x43d },
	{ 'M', 0x41c, 0x43c },
	{0,0,0}
    },
//makedonia
    {
	{ 'Q', 0x409, 0x459 },
	{ 'W', 0x40a, 0x45a },
	{ 'E', 0x415, 0x435 },
	{ 'R', 0x420, 0x440 },
	{ 'T', 0x422, 0x442 },
	{ 'Y', 0x405, 0x455 },
	{ 'U', 0x423, 0x443 },
	{ 'I', 0x418, 0x438 },
	{ 'O', 0x41e, 0x43e },
	{ 'P', 0x41f, 0x43f },
	{ 'A', 0x410, 0x430 },
	{ 'S', 0x421, 0x441 },
	{ 'D', 0x414, 0x434 },
	{ 'F', 0x424, 0x444 },
	{ 'G', 0x413, 0x433 },
	{ 'H', 0x425, 0x445 },
	{ 'J', 0x408, 0x458 },
	{ 'K', 0x41a, 0x43a },
	{ 'L', 0x41b, 0x43b },
	{ 'Z', 0x417, 0x437 },
	{ 'X', 0x40f, 0x45f },
	{ 'C', 0x426, 0x446 },
	{ 'V', 0x412, 0x432 },
	{ 'B', 0x411, 0x431 },
	{ 'N', 0x41d, 0x43d },
	{ 'M', 0x41c, 0x43c },
	{0,0,0}
    },
//belorussian
    {
	{ 'Q', 0x42f, 0x44f },
	{ 'W', 0x428, 0x448 },
	{ 'E', 0x415, 0x435 },
	{ 'R', 0x420, 0x440 },
	{ 'T', 0x422, 0x442 },
	{ 'Y', 0x42b, 0x44b },
	{ 'U', 0x423, 0x443 },
	{ 'I', 0x406, 0x456 },
	{ 'O', 0x41e, 0x43e },
	{ 'P', 0x41f, 0x43f },
	{ 'A', 0x410, 0x430 },
	{ 'S', 0x421, 0x441 },
	{ 'D', 0x414, 0x434 },
	{ 'F', 0x424, 0x444 },
	{ 'G', 0x413, 0x433 },
	{ 'H', 0x425, 0x445 },
	{ 'J', 0x419, 0x439 },
	{ 'K', 0x41a, 0x43a },
	{ 'L', 0x41b, 0x43b },
	{ 'Z', 0x417, 0x437 },
	{ 'X', 0x427, 0x447 },
	{ 'C', 0x426, 0x446 },
	{ 'V', 0x412, 0x432 },
	{ 'B', 0x411, 0x431 },
	{ 'N', 0x41d, 0x43d },
	{ 'M', 0x41c, 0x43c },
	{0,0,0}
    },
//bolgaria
    {
	{ 'Q', 0x42f, 0x44f },
	{ 'W', 0x428, 0x448 },
	{ 'E', 0x415, 0x435 },
	{ 'R', 0x420, 0x440 },
	{ 'T', 0x422, 0x442 },
	{ 'Y', 0x42b, 0x44b },
	{ 'U', 0x423, 0x443 },
	{ 'I', 0x418, 0x438 },
	{ 'O', 0x41e, 0x43e },
	{ 'P', 0x41f, 0x43f },
	{ 'A', 0x410, 0x430 },
	{ 'S', 0x421, 0x441 },
	{ 'D', 0x414, 0x434 },
	{ 'F', 0x424, 0x444 },
	{ 'G', 0x413, 0x433 },
	{ 'H', 0x425, 0x445 },
	{ 'J', 0x419, 0x439 },
	{ 'K', 0x41a, 0x43a },
	{ 'L', 0x41b, 0x43b },
	{ 'Z', 0x417, 0x437 },
	{ 'X', 0x427, 0x447 },
	{ 'C', 0x426, 0x446 },
	{ 'V', 0x412, 0x432 },
	{ 'B', 0x411, 0x431 },
	{ 'N', 0x41d, 0x43d },
	{ 'M', 0x41c, 0x43c },
	{0,0,0}
    },
//srbia
    {
	{ 'Q', 0x409, 0x459 },
	{ 'W', 0x40a, 0x45a },
	{ 'E', 0x415, 0x435 },
	{ 'R', 0x420, 0x440 },
	{ 'T', 0x422, 0x442 },
	{ 'Y', 0x417, 0x437 },
	{ 'U', 0x423, 0x443 },
	{ 'I', 0x418, 0x438 },
	{ 'O', 0x41e, 0x43e },
	{ 'P', 0x41f, 0x43f },
	{ 'A', 0x410, 0x430 },
	{ 'S', 0x421, 0x441 },
	{ 'D', 0x414, 0x434 },
	{ 'F', 0x424, 0x444 },
	{ 'G', 0x413, 0x433 },
	{ 'H', 0x425, 0x445 },
	{ 'J', 0x408, 0x458 },
	{ 'K', 0x41a, 0x43a },
	{ 'L', 0x41b, 0x43b },
	{ 'Z', 0x405, 0x455 },
	{ 'X', 0x40f, 0x45f },
	{ 'C', 0x426, 0x446 },
	{ 'V', 0x412, 0x432 },
	{ 'B', 0x411, 0x431 },
	{ 'N', 0x41d, 0x43d },
	{ 'M', 0x41c, 0x43c },
	{0,0,0}
    },
//ukraina
    {
	{ 'Q', 0x42f, 0x44f },
	{ 'W', 0x428, 0x448 },
	{ 'E', 0x415, 0x435 },
	{ 'R', 0x420, 0x440 },
	{ 'T', 0x422, 0x442 },
	{ 'Y', 0x406, 0x456 },
	{ 'U', 0x423, 0x443 },
	{ 'I', 0x418, 0x438 },
	{ 'O', 0x41e, 0x43e },
	{ 'P', 0x41f, 0x43f },
	{ 'A', 0x410, 0x430 },
	{ 'S', 0x421, 0x441 },
	{ 'D', 0x414, 0x434 },
	{ 'F', 0x424, 0x444 },
	{ 'G', 0x413, 0x433 },
	{ 'H', 0x425, 0x445 },
	{ 'J', 0x419, 0x439 },
	{ 'K', 0x41a, 0x43a },
	{ 'L', 0x41b, 0x43b },
	{ 'Z', 0x417, 0x437 },
	{ 'X', 0x427, 0x447 },
	{ 'C', 0x426, 0x446 },
	{ 'V', 0x412, 0x432 },
	{ 'B', 0x411, 0x431 },
	{ 'N', 0x41d, 0x43d },
	{ 'M', 0x41c, 0x43c },
	{0,0,0}
    },
};

typedef struct _fnkbdecode{
    int	keycode;
    ushort unicode;
} fnkbdecode;

fnkbdecode hkeymap_fn[][11] = {
//russia
    {
	{ '@', 0x416 },
	{ '#', 0x436 },
	{ '$', 0x429 },
	{ '%', 0x449 },
	{ '_', 0x42d },
	{ '&', 0x44d },
	{ '+', 0x42e },
	{ '=', 0x44e },
	{ '~', 0x44c },
	{0,0},
	{0,0}
    },
//makedonia    
    {
	{ '@', 0x428 },
	{ '#', 0x448 },
	{ '$', 0x403 },
	{ '%', 0x453 },
	{ '_', 0x416 },
	{ '&', 0x436 },
	{ '+', 0x427 },
	{ '=', 0x447 },
	{ '<', 0x40c },
	{ '>', 0x45c },
	{0,0}
    },
//belorussia
    {
	{ '@', 0x416 },
	{ '#', 0x436 },
	{ '$', 0x40e },
	{ '%', 0x45e },
	{ '_', 0x42d },
	{ '&', 0x44d },
	{ '+', 0x42e },
	{ '=', 0x44e },
	{ '~', 0x44c },
	{0,0},
	{0,0},
    },
//bolgaria
    {
	{ '@', 0x416 },
	{ '#', 0x436 },
	{ '$', 0x429 },
	{ '%', 0x449 },
	{ '_', 0x42d },
	{ '&', 0x44d },
	{ '+', 0x42e },
	{ '=', 0x44e },
	{ '~', 0x44c },
	{0,0},
	{0,0}
    },
//srbia
    {
	{ '@', 0x428 },
	{ '#', 0x448 },
	{ '$', 0x402 },
	{ '%', 0x452 },
	{ '_', 0x416 },
	{ '&', 0x436 },
	{ '+', 0x427 },
	{ '=', 0x447 },
	{ '<', 0x40b },
	{ '>', 0x45b },
	{0,0}
    },
//ukraina
    {
	{ '@', 0x416 },
	{ '#', 0x436 },
	{ '$', 0x429 },
	{ '%', 0x449 },
	{ '_', 0x404 },
	{ '&', 0x454 },
	{ '+', 0x42e },
	{ '=', 0x44e },
	{ '~', 0x44c },
	{0,0},
	{0,0}
    }
};
